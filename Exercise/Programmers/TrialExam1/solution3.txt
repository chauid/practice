4^n (n = generation)
순종 1 => 순종 4
잡종 1= > 순종 2, 잡종 2

잡1 => 순1잡2순1
순1잡2순1 => 순4 순1잡2순1 순1잡2순1 순4

1: 0
2: R1r1 => 2
3: R4 | R1r1, R1r1 | r4 => 12
4 + 2*(2) + 4

4: R16 | R4, R1r1, R1r1, r4 | R4, R1r1, R1r1, r4 | r16 => 56
16 + 2*(12) + 16

5: R64 | R16 | R4 | R1r1, R1r1 | r4, R4 | R1r1, R1r1 | r4 | r16, R16 | R4 | R1r1, R1r1 | r4, R4 | R1r1, R1r1 | r4 | r16 | r64 => 240
64 + 2*(56) + 64

x > 2
4^(x-2), 4^(x-3), 4^(x-4)
4^(x-2) ~ 4^(1)

0, 2, 12, 56, 240
f(x) = 4^(x-2) + 2*f(x-1) + 4^(x-2)
x= generation, x>2

f(1) = 0
f(2) = 2
f(3) = 4 + f(2) + f(2) + 4 = 12
f(4) = 16 + f(3) + f(3) + 16 = 16 + 4 + f(2) + f(2) + 4 + 4 + f(2) + f(2) + 4 + 16 = 56
f(5) = 64 + 2*f(4) + 64 = 240

1
4
16
64
256
[5, 200]: 1 => 4 => 13 => 50 => 200
Rr => rr(4, 0) => rr(4, 1) => rr(4, 2) => rr(4, 0)

[5, 84]: 1 => 2 => 6 => 21 => 84
Rr => Rr(4, 2) => Rr(4, 2) => RR(4, 1) => RR(4, 0)

[5, 6]: 1 => 1 => 1 => 2 => 6
Rr => RR(4, 1) => RR(4, 1) => RR(4, 2) => RR(4, 2)

[3, 5]:  1 => 2 => 5
Rr => Rr(4, 2) => RR(4, 1)

[4, 26]: 1 => 2 => 7 => 26
Rr => Rr(4, 2) => Rr(4, 3) => Rr(4, 2)
Rr Rr Rr

rr이 되는 조건: 2번째 세대에서 4일 경우
RR: 2번째 세대에서 1일 경우
Rr: !RR && !rr 이면서 부모 노드 중간에 1또는 4가 없는 경우

2, 3 <- 1 : RR추정
2, 3 ,<- 4 : rr추정


2세대에서 4면, rr확정, 1이면 RR확정

RR => 1~4: RR
rr => 1~4: rr
Rr => 1: RR, 2~3: Rr, 4: rr
